plugins {
    id "fabric-loom" version "+"
    id "maven-publish"
    id "eclipse"
    id "idea"
    id "java-library"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

compileJava {
    [compileJava, compileTestJava]*.options*.encoding = "UTF-8"
}

setArchivesBaseName(project.archives_base_name)
setVersion(getVersion())
setGroup(project.maven_group)

loom {
    setRuntimeOnlyLog4j(true)

    mixin {
        setDefaultRefmapName("mixins.backinclassic.refmap.json")
    }

    //setAccessWidenerPath(file("src/main/resources/wilderwild.accesswidener"))

    interfaceInjection {
        setEnableDependencyInterfaceInjection(false)
    }
}

configurations {
    includeModImplementation
    includeImplementation

    include.extendsFrom(includeImplementation)
    include.extendsFrom(includeModImplementation)

    implementation.extendsFrom(includeImplementation)
    modImplementation.extendsFrom(includeModImplementation)
}

repositories {
    maven {
        setUrl("https://jitpack.io")
    }
    maven {
        setName("Modrinth")
        setUrl("https://api.modrinth.com/maven")

        content {
            includeGroup("maven.modrinth")
        }
    }
    maven {
        setUrl("https://maven.terraformersmc.com")

        content {
            includeGroup("com.terraformersmc")
        }
    }
    maven {
        setUrl("https://maven.shedaniel.me/")
    }
    maven {
        setUrl("https://cursemaven.com")

        content {
            includeGroup("curse.maven")
        }
    }
    maven {
        setUrl("https://maven.flashyreese.me/releases")
    }
    maven {
        setUrl("https://maven.flashyreese.me/snapshots")
    }
    maven {
        setUrl("https://maven.minecraftforge.net/")
    }
    maven {
        setUrl("https://maven.parchmentmc.org")
    }
    maven {
        setName("Quilt")
        setUrl("https://maven.quiltmc.org/repository/release")
    }

    flatDir {
        dirs("libs")
    }
}

dependencies {
    minecraft("com.mojang:minecraft:${minecraft_version}")
    mappings(loom.layered {
        it.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${quilt_mappings}:intermediary-v2")
        it.parchment("org.parchmentmc.data:parchment-1.19.3:${parchment_mappings}@zip")
        it.officialMojangMappings {
            setNameSyntheticMembers(false)
        }
    })
    modImplementation("net.fabricmc:fabric-loader:${loader_version}")

    modImplementation("net.fabricmc.fabric-api:fabric-api:${fabric_version}")
}

tasks.withType(JavaCompile).configureEach {
    it.options.setEncoding("UTF-8")
    it.options.setRelease(17)
    options.setFork(true)
    options.setIncremental(true)
}

tasks.withType(Test).configureEach {
    setMaxParallelForks(Runtime.runtime.availableProcessors().intdiv(2) ?: 1)
}

java {
    setSourceCompatibility(JavaVersion.VERSION_17)
    setTargetCompatibility(JavaVersion.VERSION_17)

    withSourcesJar()
}

String getVersion() {
    String version = "${mod_version}-${mod_loader}+${minecraft_version}"

    if (!project.release) {
        version += "-unstable"
    }

    return version
}


/*
jar {
    manifest {
        attributes([
                "Specification-Title": "backinclassic",
                "Specification-Vendor": ""
        ])
    }
}*/